{"version":3,"sources":["utils/util.js"],"names":["formatDate","source","format","o","getMonth","getDate","getHours","getMinutes","getSeconds","Math","floor","getMilliseconds","test","replace","RegExp","$1","getFullYear","substr","length","k","module","exports"],"mappings":";;AAAA;;;;;;AAMA,SAASA,UAAT,CAAqBC,MAArB,EAA6BC,MAA7B,EAAqC;AACnC,MAAMC,IAAI;AACR,UAAMF,OAAOG,QAAP,KAAoB,CADlB,EACqB;AAC7B,UAAMH,OAAOI,OAAP,EAFE,EAEgB;AACxB,UAAMJ,OAAOK,QAAP,EAHE,EAGiB;AACzB,UAAML,OAAOM,UAAP,EAJE,EAImB;AAC3B,UAAMN,OAAOO,UAAP,EALE,EAKmB;AAC3B,UAAMC,KAAKC,KAAL,CAAW,CAACT,OAAOG,QAAP,KAAoB,CAArB,IAA0B,CAArC,CANE,EAMuC;AAC/C,UAAMH,OAAOU,eAAP,EAPE,CAOuB;AAPvB,GAAV;AASA,MAAI,OAAOC,IAAP,CAAYV,MAAZ,CAAJ,EAAyB;AACvBA,aAASA,OAAOW,OAAP,CAAeC,OAAOC,EAAtB,EAA0B,CAACd,OAAOe,WAAP,KAAuB,EAAxB,EAA4BC,MAA5B,CAAmC,IAAIH,OAAOC,EAAP,CAAUG,MAAjD,CAA1B,CAAT;AACD;AACD,OAAK,IAAIC,CAAT,IAAchB,CAAd,EAAiB;AACf,QAAI,IAAIW,MAAJ,CAAW,MAAMK,CAAN,GAAU,GAArB,EAA0BP,IAA1B,CAA+BV,MAA/B,CAAJ,EAA4C;AAC1CA,eAASA,OAAOW,OAAP,CAAeC,OAAOC,EAAtB,EAA2BD,OAAOC,EAAP,CAAUG,MAAV,KAAqB,CAAtB,GAA4Bf,EAAEgB,CAAF,CAA5B,GAAqC,CAAC,OAAOhB,EAAEgB,CAAF,CAAR,EAAcF,MAAd,CAAqB,CAAC,KAAKd,EAAEgB,CAAF,CAAN,EAAYD,MAAjC,CAA/D,CAAT;AACD;AACF;AACD,SAAOhB,MAAP;AACD;;AAEDkB,OAAOC,OAAP,GAAiB,EAAErB,sBAAF,EAAjB","file":"util.js","sourcesContent":["/**\r\n * 格式化时间\r\n * @param  {Datetime} source 时间对象\r\n * @param  {String} format 格式\r\n * @return {String}        格式化过后的时间\r\n */\r\nfunction formatDate (source, format) {\r\n  const o = {\r\n    'M+': source.getMonth() + 1, // 月份\r\n    'd+': source.getDate(), // 日\r\n    'H+': source.getHours(), // 小时\r\n    'm+': source.getMinutes(), // 分\r\n    's+': source.getSeconds(), // 秒\r\n    'q+': Math.floor((source.getMonth() + 3) / 3), // 季度\r\n    'f+': source.getMilliseconds() // 毫秒\r\n  }\r\n  if (/(y+)/.test(format)) {\r\n    format = format.replace(RegExp.$1, (source.getFullYear() + '').substr(4 - RegExp.$1.length))\r\n  }\r\n  for (let k in o) {\r\n    if (new RegExp('(' + k + ')').test(format)) {\r\n      format = format.replace(RegExp.$1, (RegExp.$1.length === 1) ? (o[k]) : (('00' + o[k]).substr(('' + o[k]).length)))\r\n    }\r\n  }\r\n  return format\r\n}\r\n\r\nmodule.exports = { formatDate }\r\n"]}